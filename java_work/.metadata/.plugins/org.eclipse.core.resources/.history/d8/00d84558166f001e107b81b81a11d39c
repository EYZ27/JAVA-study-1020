package jdbc;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
 
public class JDBC {
        
    // DB Driver
    String dbDriver = "org.postgresql.Driver";
    
    // DB URL
    // IP:PORT/스키마 
    String dbUrl = "jdbc:postgresql://106.243.92.221:54321/asiae";
    
    // DB ID/PW
    String dbUser = "yeaqwer";
    String dbPassword = "qwer1234";
    
    
    Connection dbconn = null;
    
    
    public void dbConnection()
    {
        Connection connection = null;
        
        try 
        {
            Class.forName(dbDriver);
            connection = DriverManager.getConnection(dbUrl, dbUser, dbPassword);
            dbconn = connection;
            
            System.out.println("DB Connection [성공]");
        } 
        catch (SQLException e) 
        {
            e.printStackTrace();
        } 
        catch (ClassNotFoundException e) 
        {
            e.printStackTrace();
        }
    }
    
 
    public void dbClose()
    {
        try 
        {
            if(dbconn != null) 
            {
            dbconn.close();
            dbconn = null;
            System.out.println("DB Close [성공]");
            }
        } 
        catch (SQLException e) 
        {
            e.printStackTrace();
        }
    }
    
 
    
    public List<Object> selectSample(String sql) {
        
        Statement st = null;
 
        Map<String, Object> tempMap = new HashMap<String, Object>();
        List<Object> resultList = new ArrayList<Object>();
        
        try 
        {
            st = dbconn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            
            while (rs.next()) 
            {
                for (int i = 0; i < rs.getMetaData().getColumnCount(); i++) 
                {
                    tempMap.put(rs.getMetaData().getColumnName(i+1), rs.getString(rs.getMetaData().getColumnName(i+1)));
                }
                
                resultList.add(tempMap);
                tempMap = new HashMap<>();    // tempMap reset
            }
            
            rs.close(); st.close();
        }
        catch (SQLException se1) 
        {
            se1.printStackTrace();
        }
        catch (Exception ex) 
        {
            ex.printStackTrace();
        }
        finally
        {
            try 
            {
                if (st != null)
                {
                    st.close();
                }
            } 
            catch (SQLException se2) 
            { 
                se2.printStackTrace();
            }
        }
        
        return resultList;
    }
    
}